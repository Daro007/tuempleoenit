{"version":3,"sources":["Images/finanzas.svg","Images/ambiente-relajado.svg","Images/Practico.svg","Components/Header.js","Components/Footer.js","Components/WhyUs.js","Pages/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Footer","href","WhyUs","src","Practico","alt","Ambiente","Finanzas","Homepage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,6JCa5BC,MAXf,WACE,OACE,yBAAKC,UAAU,UACb,wBAAIA,UAAU,UAAd,oBACA,uBAAGA,UAAU,aAAb,wD,OCiCSC,MAlCf,WACE,OACE,yBAAKD,UAAU,UACb,6BACE,uBAAGA,UAAU,gBAAb,mBACA,uBAAGA,UAAU,aAAb,wBAEF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,aAAaE,KAAK,2BAA/B,iBAGA,6BACA,uBAAGF,UAAU,aAAaE,KAAK,2BAA/B,YAGA,6BACA,uBAAGF,UAAU,aAAaE,KAAK,2BAA/B,eAGA,6BACA,uBAAGF,UAAU,aAAaE,KAAK,2BAA/B,uCAGA,6BACA,uBAAGF,UAAU,aAAaE,KAAK,2BAC7B,kBAAC,IAAD,CAAYF,UAAU,gBAAiB,IACvC,kBAAC,IAAD,CAAiBA,UAAU,gBAAiB,IAC5C,kBAAC,IAAD,CAAkBA,UAAU,oB,gDCyBvBG,MApDf,WACE,OACE,yBAAKH,UAAU,SACb,wBAAIA,UAAU,gBAAd,gCACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,6BACE,yBAAKI,IAAKC,IAAUC,IAAI,WAAWN,UAAU,QAAS,KAExD,6BACE,wBAAIA,UAAU,kBAAd,yBACA,uBAAGA,UAAU,oBACV,IADH,8KAQJ,yBAAKA,UAAU,QACb,6BACE,yBAAKI,IAAKG,IAAUD,IAAI,uBAAuBN,UAAU,QAAS,KAEpE,6BACE,wBAAIA,UAAU,kBAAd,iBACA,uBAAGA,UAAU,oBACV,IADH,8KAQJ,yBAAKA,UAAU,QACb,6BACE,yBAAKI,IAAKI,IAAUF,IAAI,mBAAmBN,UAAU,QAAS,KAEhE,6BACE,wBAAIA,UAAU,kBAAd,0BACA,uBAAGA,UAAU,oBACV,IADH,iLC7BGS,MAVf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCESC,MARf,WACE,OACE,yBAAKV,UAAU,OACb,kBAAC,EAAD,QCKcW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.85d0d083.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/finanzas.a845f115.svg\";","module.exports = __webpack_public_path__ + \"static/media/ambiente-relajado.7aa72156.svg\";","module.exports = __webpack_public_path__ + \"static/media/Practico.8293fd34.svg\";","import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1 className=\"titulo\">Tu empleo en IT </h1>\n      <p className=\"subtitulo\">\n        Encuentra las mejores ofertas de la industria Tech\n      </p>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { FaLinkedin } from \"react-icons/fa\";\nimport { FaTwitterSquare } from \"react-icons/fa\";\nimport { FaFacebookSquare } from \"react-icons/fa\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <div>\n        <p className=\"footer-sello\">Tu empleo en IT</p>\n        <p className=\"copyright\">© Copyright 2020</p>\n      </div>\n      <div className=\"links-footer\">\n        <a className=\"linkfooter\" href=\"https://www.google.com/\">\n          Quienes somos\n        </a>\n        <br />\n        <a className=\"linkfooter\" href=\"https://www.google.com/\">\n          Contacto\n        </a>\n        <br />\n        <a className=\"linkfooter\" href=\"https://www.google.com/\">\n          Aviso Legal\n        </a>\n        <br />\n        <a className=\"linkfooter\" href=\"https://www.google.com/\">\n          Política de Privacidad y Cookies\n        </a>\n        <br />\n        <a className=\"linkfooter\" href=\"https://www.google.com/\">\n          <FaLinkedin className=\"footer-icon\" />{\" \"}\n          <FaTwitterSquare className=\"footer-icon\" />{\" \"}\n          <FaFacebookSquare className=\"footer-icon\" />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Finanzas from \"../Images/finanzas.svg\";\nimport Ambiente from \"../Images/ambiente-relajado.svg\";\nimport Practico from \"../Images/Practico.svg\";\n\nfunction WhyUs() {\n  return (\n    <div className=\"whyUs\">\n      <h1 className=\"whyUs-titulo\"> ¿ Por qué nosotros ? </h1>\n      <div className=\"razones\">\n        <div className=\"item\">\n          <div>\n            <img src={Practico} alt=\"Practico\" className=\"svg\" />{\" \"}\n          </div>\n          <div>\n            <h4 className=\"titulo-razones\">Rápido y fácil </h4>\n            <p className=\"parrafos-razones\">\n              {\" \"}\n              Lorem ipsum dolor sit amet consectetur adipiscing elit cubilia,\n              aliquet lacinia ligula ut vestibulum eros urna ullamcorper, cras\n              sodales eleifend massa ac magna dictum.\n            </p>\n          </div>\n        </div>\n        <div className=\"item\">\n          <div>\n            <img src={Ambiente} alt=\"Ambiente de Start-up\" className=\"svg\" />{\" \"}\n          </div>\n          <div>\n            <h4 className=\"titulo-razones\">Profesionales</h4>\n            <p className=\"parrafos-razones\">\n              {\" \"}\n              Lorem ipsum dolor sit amet consectetur adipiscing elit cubilia,\n              aliquet lacinia ligula ut vestibulum eros urna ullamcorper, cras\n              sodales eleifend massa ac magna dictum.\n            </p>\n          </div>\n        </div>\n        <div className=\"item\">\n          <div>\n            <img src={Finanzas} alt=\"Grafico finanzas\" className=\"svg\" />{\" \"}\n          </div>\n          <div>\n            <h4 className=\"titulo-razones\">Claros y transparentes</h4>\n            <p className=\"parrafos-razones\">\n              {\" \"}\n              Lorem ipsum dolor sit amet consectetur adipiscing elit cubilia,\n              aliquet lacinia ligula ut vestibulum eros urna ullamcorper, cras\n              sodales eleifend massa ac magna dictum.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WhyUs;\n","import React from \"react\";\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport WhyUs from \"../Components/WhyUs\";\n\nfunction Homepage() {\n  return (\n    <div>\n      <Header />\n      <WhyUs />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}